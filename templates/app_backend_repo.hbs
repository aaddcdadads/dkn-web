#!/bin/bash

# 应用后端代码仓库初始化

# 文件夹基础目录
base_dir={{workdir}}

# 应用web仓库文件夹名称
target_dir={{targetDir}}

# 仓库gitlab clone地址列表 示例: dirs=("ssh://xx1.git,ssh://xx2.git,ssh://xx3.git,ssh://xx4.git,ssh://xx5.git")
gitlab_urls_str=({{gitlabUrls}})
# 将IFS设置为逗号
IFS=','
# 将字符串分割为数组
gitlab_urls=($gitlab_urls_str)

# 待合并的微应用仓库文件夹名列表 示例: dirs=("dir2,dir3,dir4,dir5")
merge_dirs_str=({{mergeDirs}})
# 将IFS设置为逗号
IFS=','
# 将字符串分割为数组
merge_dirs=($merge_dirs_str)


# 进入工作目录
cd $base_dir

# 克隆仓库代码
echo "===> 1.克隆仓库代码 start"
for url in "${gitlab_urls[@]}"; do
    git clone $url
done
echo "===> 1.克隆仓库代码 success"


# 创建一个文件夹,用于存放所有微应用项目的父项目pom.xml文件
mkdir pom

# 合并merge_dirs文件夹到base_dir
echo "===> 2.合并web目录 start"
for dir in "${merge_dirs[@]}"; do
    # 检查目录是否存在
    if [ -d "$base_dir/$dir" ]; then
        #删除目录中的.git 
        rm -rf $base_dir/$dir/.git
        #拷贝父项目pom.xml文件
        cp $base_dir/$dir/jeecg-boot/pom.xml pom/$dir.xml
        # 移动目录中的文件到 target_dir
        mv "$base_dir/$dir"/* "$base_dir/$target_dir/"
        # 删除空目录
        # rmdir "$base_dir/$dir"
        echo "文件夹 $dir 已合并到 $target_dir"
    else
        echo "文件夹 $dir 不存在"
    fi
done
echo "===> 2.合并web目录 success"


echo "===> 3.初始化项目配置 start"
# 拷贝init.sh脚本
cp {{initJeecgShPath}} $target_dir/init_jeecg.sh
#进入仓库目录
cd $target_dir
pwd
chmod a+x init_jeecg.sh
./init_jeecg.sh
echo "===> 3.初始化项目配置 success"


# 提交应用web仓库代码
echo "===> 4.提交应用仓库代码 start"
git add .
git commit -m "init repo"
git push
echo "===> 4.提交应用仓库代码 success"


# 同步nginx配置
echo "===> 5.同步nginx配置 start"
# 同步nginx配置到nginx server
rsync -avz --progress jeecg-boot/docs/{{projectCode}}.conf {{nginxUser}}@{{nginxServer}}:/etc/nginx/sites-enabled/member/
# 重载nginx配置
ssh {{nginxUser}}@{{nginxServer}} "service nginx reload && exit"
echo "===> 5.同步nginx配置 success"


echo "~~ 应用后端仓库初始化完成 ~~"