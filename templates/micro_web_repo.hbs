#!/bin/bash

# 前端仓库初始化
# 设置仓库信息
repo_directory={{repoDirectory}}
repo_url={{webRepoUrl}}
name_web={{webRepoName}}

# 模板仓库信息
web_template_url={{webTemplateRepoUrl}}
web_template_name=jeecgboot-vue3

# 进入仓库保存目录
cd $repo_directory

# 克隆微应用web仓库代码
git clone $repo_url --quiet
echo "clone $repo_url success"

#克隆web模板仓库代码
echo "===> 1.克隆web模板仓库代码 start"
git clone $web_template_url --quiet
echo "clone $web_template_url success"

# 判断变量是否为jeecg-vue3模板仓库
if [ "$web_template_url" == 'ssh://git@gitlab.haomo-studio.com:15822/templates/jeecgboot-vue3.git' ]; then
    cd $web_template_name
    # 切换到incubation分支
    git checkout incubation --quiet
    git pull --quiet
    cd $repo_directory
else
    echo "采用项目仓库做模板"
fi

echo "===> 1.克隆web模板仓库代码 success"

#将模板仓库代码复制到微应用仓库中
echo "===> 2.将模板仓库代码复制到微应用仓库中 start"
rsync -az --exclude='.git' --exclude='.gitlab-ci.yml' $web_template_name/ $name_web
echo "===> 2.将模板仓库代码复制到微应用仓库中 success"

# 拷贝init.sh脚本
cp {{initJeecgVue3ShPath}} $name_web/init_jeecg_vue3.sh

# 初始化项目配置
echo "===> 3.初始化项目配置 start"
cd $name_web
pwd
chmod a+x init_jeecg_vue3.sh
./init_jeecg_vue3.sh
echo "===> 3.初始化项目配置 success"


# 指定文件路径和替换的文本内容
search='"version": "1.0"'
replace='"version": "1.1"'
# 修改init.json中的版本号,防止后面二次触发初始ci
sed "s/$search/$replace/g" scripts/init.json > tmpfile && mv tmpfile scripts/init.json
#切换ci执行目录为新的仓库目录
sed -i 's:{{baseDir}}:{{baseDir}}/{{projectCode}}:g' .gitlab-ci.yml

# 提交代码
echo "===> 4.微应用前端代码提交 start"
git add . > /dev/null 2>&1
git commit -m "repo init" --quiet
git push --quiet
echo "===> 4.微应用前端代码提交 success"

echo "~~前端仓库初始化完成~~"